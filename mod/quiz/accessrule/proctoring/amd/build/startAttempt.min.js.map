{"version":3,"sources":["../src/startAttempt.js"],"names":["define","$","Ajax","Notification","setup","props","enablesharescreen","enablescreenshare","startCapture","logElem","innerHTML","navigator","mediaDevices","getDisplayMedia","displayMediaOptions","videoElem","srcObject","dumpOptionsInfo","errString","toString","alert","window","share_state","document","getElementById","window_surface","screenoff","video","cursor","audio","click","event","preventDefault","css","updateWindowStatus","videoTrack","getVideoTracks","currentStream","active","settings","getSettings","displaySurface","value","stop","clearInterval","windowState","location","reload","takeScreenshot","screenShotInterval","close","video_screen","canvas_screen","screen_context","getContext","width","screen","height","drawImage","screen_data","toDataURL","params","courseid","id","cmid","call","methodname","args","done","data","warnings","length","addNotification","message","type","fail","exception","setInterval","screenshotinterval","photo","canvas","context","setAttribute","profileimage","style","display","status"],"mappings":"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","sourcesContent":["define(['jquery', 'core/ajax', 'core/notification'],\n    function($, Ajax, Notification) {\n        return {\n            setup: function(props) {\n                // Console.log('start attempt loaded');\n                // console.log(props);\n                var enablesharescreen = props.enablescreenshare;\n                if(enablesharescreen == 'yes'){\n                    window.share_state = document.getElementById('share_state');\n                    window.window_surface = document.getElementById('window_surface');\n                    window.screenoff = document.getElementById('screen_off_flag');\n\n                    const videoElem = document.getElementById(\"video-screen\");\n                    const logElem = document.getElementById(\"log-screen\");\n                    var displayMediaOptions = {\n                        video: {\n                            cursor: \"always\"\n                        },\n                        audio: false\n                    };\n\n                    $(\"#share_screen_btn\").click(function() {\n                        event.preventDefault();\n                        // Console.log('screen sharing clicked');\n                        startCapture();\n                        $(\"#form_activate\").css(\"visibility\", \"visible\");\n                        // Options for getDisplayMedia()\n\n                    });\n\n                    async function startCapture() {\n                        logElem.innerHTML = \"\";\n                        try {\n                            // Console.log(\"vid found success\");\n                            videoElem.srcObject = await navigator.mediaDevices.getDisplayMedia(displayMediaOptions);\n                            dumpOptionsInfo();\n                        } catch (err) {\n                            // Console.log(\"Error: \" + err.toString());\n                            let errString = err.toString();\n                            if (errString == \"NotAllowedError: Permission denied\") {\n                                alert(\"Please share entire screen.\");\n                                return false;\n                            }\n                        }\n                    }\n\n                    function dumpOptionsInfo() {\n                        // Const videoTrack = videoElem.srcObject.getVideoTracks()[0];\n\n                        // Console.info(\"Track settings:\");\n                        // console.info(JSON.stringify(videoTrack.getSettings(), null, 2));\n                        // console.info(\"Track constraints:\");\n                        // console.info(JSON.stringify(videoTrack.getConstraints(), null, 2));\n                    }\n\n                    var updateWindowStatus = function() {\n                        if (videoElem.srcObject !== null) {\n                            // Console.log(videoElem);\n                            const videoTrack = videoElem.srcObject.getVideoTracks()[0];\n                            var currentStream = videoElem.srcObject;\n                            var active = currentStream.active;\n                            var settings = videoTrack.getSettings();\n                            var displaySurface = settings.displaySurface;\n                            document.getElementById('window_surface').value = displaySurface;\n                            document.getElementById('share_state').value = active;\n                            var screenoff = document.getElementById('screen_off_flag').value;\n                            if (screenoff == \"1\") {\n                                videoTrack.stop();\n                                // Console.log('video stopped');\n                                clearInterval(windowState);\n                                location.reload();\n                            }\n                        }\n                    };\n\n                    var takeScreenshot = function() {\n                        var screenoff = document.getElementById('screen_off_flag').value;\n                        if (videoElem.srcObject !== null) {\n                            // Console.log(videoElem);\n                            const videoTrack = videoElem.srcObject.getVideoTracks()[0];\n                            var currentStream = videoElem.srcObject;\n                            var active = currentStream.active;\n                            // Console.log(active);\n\n                            var settings = videoTrack.getSettings();\n                            var displaySurface = settings.displaySurface;\n\n                            if (screenoff == \"0\") {\n                                if (!active) {\n                                    alert(\"Sorry !! You need to restart the attempt as you have stopped the screenshare.\");\n                                    clearInterval(screenShotInterval);\n                                    window.close();\n                                    return false;\n                                }\n\n                                if (displaySurface !== \"monitor\") {\n                                    // console.log(displaySurface);\n                                    alert(\"Sorry !! You need to share entire screen.\");\n                                    clearInterval(screenShotInterval);\n                                    window.close();\n                                    return false;\n                                }\n\n                            }\n                            // Console.log(displaySurface);\n                            // console.log(quizurl);\n\n                            // Capture Screen\n                            var video_screen = document.getElementById('video-screen');\n                            var canvas_screen = document.getElementById('canvas-screen');\n                            var screen_context = canvas_screen.getContext('2d');\n                            // Var photo_screen = document.getElementById('photo_screen');\n                            canvas_screen.width = screen.width;\n                            canvas_screen.height = screen.height;\n                            screen_context.drawImage(video_screen, 0, 0, screen.width, screen.height);\n                            var screen_data = canvas_screen.toDataURL('image/png');\n                            // Photo_screen.setAttribute('src', screen_data);\n                            // console.log(screen_data);\n\n                            // API Call\n                            var wsfunction = 'quizaccess_proctoring_send_camshot';\n                            var params = {\n                                'courseid': props.courseid,\n                                'screenshotid': props.id,\n                                'quizid': props.cmid,\n                                'webcampicture': screen_data,\n                                'imagetype': 2\n                            };\n\n                            var request = {\n                                methodname: wsfunction,\n                                args: params\n                            };\n\n                            // Console.log('params', params);\n                            if (screenoff == \"0\") {\n                                Ajax.call([request])[0].done(function(data) {\n                                    if (data.warnings.length < 1) {\n                                        // NO; pictureCounter++;\n                                    } else {\n                                        if (video_screen) {\n                                            Notification.addNotification({\n                                                message: 'Something went wrong during taking the image.',\n                                                type: 'error'\n                                            });\n                                            clearInterval(screenShotInterval);\n                                        }\n                                    }\n                                }).fail(Notification.exception);\n                            }\n                        }\n                    };\n\n                    var screenShotInterval = setInterval(takeScreenshot, props.screenshotinterval);\n                    var windowState = setInterval(updateWindowStatus, 1000);\n                }\n\n                $(\"#fcvalidate\").click(function() {\n                    event.preventDefault();\n                    // Console.log('validate face clicked');\n                    var photo = document.getElementById('photo');\n                    var canvas = document.getElementById('canvas');\n                    var video = document.getElementById('video');\n                    var context = canvas.getContext('2d');\n                    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                    var data = canvas.toDataURL('image/png');\n                    photo.setAttribute('src', data);\n\n                    var courseid = document.getElementById('courseidval').value;\n                    var cmid = document.getElementById('cmidval').value;\n                    var profileimage = document.getElementById('profileimage').value;\n\n                    var wsfunction = 'quizaccess_proctoring_validate_face';\n                    var params = {\n                        'courseid': courseid,\n                        'cmid': cmid,\n                        'profileimage': profileimage,\n                        'webcampicture': data,\n                    };\n\n                    var request = {\n                        methodname: wsfunction,\n                        args: params\n                    };\n                    document.getElementById('loading_spinner').style.display = 'block';\n                    Ajax.call([request])[0].done(function(data) {\n                        if (data.warnings.length < 1) {\n                            document.getElementById('loading_spinner').style.display = 'none';\n                            // NO; pictureCounter++;\n                            // console.log('api response', data);\n                            var status = data.status;\n                            if (status == 'success') {\n                                $(\"#video\").css(\"border\", \"10px solid green\");\n                                // Document.getElementById(\"validate_form\").style.display = \"none\";\n                                document.getElementById(\"fcvalidate\").style.display = \"none\";\n                                // console.log(enablesharescreen);\n                                if(enablesharescreen == 'yes'){\n                                    document.getElementById(\"share_screen_btn\").style.display = \"block\";\n                                }\n                                else{\n                                    $(\"#form_activate\").css(\"visibility\", \"visible\");\n                                }\n                            } else {\n                                $(\"#video\").css(\"border\", \"10px solid red\");\n                            }\n                        } else {\n                            document.getElementById('loading_spinner').style.display = 'none';\n                            if (video) {\n                                Notification.addNotification({\n                                    message: 'Something went wrong during taking the image.',\n                                    type: 'error'\n                                });\n                            }\n                        }\n                    }).fail(Notification.exception);\n\n                });\n\n                return true;\n            }\n        };\n    });\n"],"file":"startAttempt.min.js"}